//
//  SellVC.m
//  WaiHui
//
//  Created by liuxiang on 2018/12/7.
//  Copyright © 2018年 faxian. All rights reserved.
//

#import "SellVC.h"

@interface SellVC ()<JXCategoryViewDelegate,JXCategoryListContentViewDelegate>
@property (nonatomic, strong) JXCategoryTitleView *categoryView;
@property (nonatomic, strong) NSMutableArray *listVCArray;
@property (nonatomic, strong) JXCategoryListContainerView *listVCContainerView;
@property (strong, nonatomic) IBOutlet NavTitleView *myTitle;

@property (weak, nonatomic) IBOutlet UILabel *symbolLan;
@property (weak, nonatomic) IBOutlet UILabel *symbolNameLab;
@property (nonatomic,strong) NSArray *titles;
@end

@implementation SellVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    NSLog(@"%f",[WRNavigationBar navBarBottom]);
    
    self.navigationItem.titleView = self.myTitle;
    self.myTitle.intrinsicContentSize = CGSizeMake(200, 40);
    self.symbolLan.text = self.model.symbol;
    self.symbolNameLab.text = self.model.symbolName;

//    self.listVCArray = [NSMutableArray array];
//    for (int i = 0; i < 2; i ++) {
//
//        if (i== 0) {
//            MarketpriceVC *listVC = [[MarketpriceVC alloc] init];
//            [self.listVCArray addObject:listVC];
//            [self addChildViewController:listVC];
//        }else{
//
//            CheckpriceVC *listVC = [[CheckpriceVC alloc] init];
//            [self.listVCArray addObject:listVC];
//            [self addChildViewController:listVC];
//        }
//
//    }
//
//    [self creatSPPageMenu];

    [self wr_setNavBarShadowImageHidden:YES];

    self.titles = @[@"市价",@"限价"];

    CGFloat categoryViewHeight = 40;
    CGFloat naviHeight = [UIApplication.sharedApplication.keyWindow jx_navigationHeight];
    CGFloat width = kScreenWidth;
    CGFloat height = kScreenHeight - naviHeight - categoryViewHeight;
    
    
    self.categoryView = [[JXCategoryTitleView alloc] init];
    self.categoryView.frame = CGRectMake(0, 0, kScreenWidth, categoryViewHeight);
    self.categoryView.delegate = self;
    self.categoryView.cellWidth = kScreenWidth / 2;
    self.categoryView.contentEdgeInsetLeft = 0;
    self.categoryView.cellSpacing = 0;
    self.categoryView.contentEdgeInsetRight = 0;

    self.categoryView.titles = self.titles;
    self.categoryView.titleColor = [MyColor colorWithHexString:@"#858296"];
    self.categoryView.titleSelectedColor = [MyColor colorWithHexString:@"#2B2B76"];
    self.categoryView.titleFont = [UIFont systemFontOfSize:14];
    JXCategoryIndicatorLineView *lineView = [[JXCategoryIndicatorLineView alloc] init];
    lineView.indicatorLineViewColor = [MyColor colorWithHexString:@"#2B2B76"];
//    lineView.lineStyle = JXCategoryIndicatorLineStyle_Normal;
    lineView.indicatorLineViewCornerRadius = 0;
    lineView.lineScrollOffsetX = -40;
    lineView.indicatorLineWidth = JXCategoryViewAutomaticDimension;

    self.categoryView.indicators = @[lineView];
    [self.view addSubview:self.categoryView];

    self.listVCContainerView = [[JXCategoryListContainerView alloc] initWithParentVC:self delegate:self];
    self.listVCContainerView.frame = CGRectMake(0, categoryViewHeight, width, kScreenHeight - Height_NavBar - categoryViewHeight);
    self.listVCContainerView.defaultSelectedIndex = 0;
    self.categoryView.defaultSelectedIndex = 0;
    [self.view addSubview:self.listVCContainerView];
    
    self.categoryView.contentScrollView = self.listVCContainerView.scrollView;
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tap)];
    [self.myTitle addGestureRecognizer:tap];
    
}

- (void)tap
{
    
    SeletedAlert *alert = [[SeletedAlert alloc] initSeletedAlert];
    alert.clikblock = ^(ProductModel * _Nonnull model) {
        
        self.model = model;
        self.symbolLan.text = self.model.symbol;
        self.symbolNameLab.text = self.model.symbolName;
        [self.listVCContainerView reloadData];
        
    };
    [alert show];
}



#pragma mark - JXCategoryViewDelegate
- (void)categoryView:(JXCategoryBaseView *)categoryView didClickSelectedItemAtIndex:(NSInteger)index {
    [self.listVCContainerView didClickSelectedItemAtIndex:index];
}

- (void)categoryView:(JXCategoryBaseView *)categoryView scrollingFromLeftIndex:(NSInteger)leftIndex toRightIndex:(NSInteger)rightIndex ratio:(CGFloat)ratio {
    [self.listVCContainerView scrollingFromLeftIndex:leftIndex toRightIndex:rightIndex ratio:ratio selectedIndex:categoryView.selectedIndex];
}

#pragma mark - JXCategoryListContainerViewDelegate

- (id<JXCategoryListContentViewDelegate>)listContainerView:(JXCategoryListContainerView *)listContainerView initListForIndex:(NSInteger)index {
    
    CGFloat categoryViewHeight = 40;
    CGFloat naviHeight = [UIApplication.sharedApplication.keyWindow jx_navigationHeight];
    CGFloat width = kScreenWidth;
    CGFloat height = kScreenHeight - naviHeight - categoryViewHeight;
    if (index == 0) {
        MarketpriceVC *listVC = [[MarketpriceVC alloc] init];
        listVC.model = self.model;

        listVC.view.frame = CGRectMake(index * width, 0, width, height);
        [self addChildViewController:listVC];
        return listVC;

        
    }else{
        
        CheckpriceVC *listVC = [[CheckpriceVC alloc] init];
        listVC.model = self.model;

        listVC.view.frame = CGRectMake(index * width, 0, width, height);
        [self addChildViewController:listVC];
        return listVC;

    }
    
   
}

- (NSInteger)numberOfListsInlistContainerView:(JXCategoryListContainerView *)listContainerView {
    return self.titles.count;
}

#pragma mark - JXCategoryViewDelegate

- (void)categoryView:(JXCategoryBaseView *)categoryView didSelectedItemAtIndex:(NSInteger)index {
    //侧滑手势处理
    self.navigationController.interactivePopGestureRecognizer.enabled = (index == 0);
    //    [self.listVCArray[index] loadDataForFirst];
}


- (IBAction)titleAC:(id)sender {

    SeletedAlert *alert = [[SeletedAlert alloc] initSeletedAlert];
    [alert show];

}


@end
