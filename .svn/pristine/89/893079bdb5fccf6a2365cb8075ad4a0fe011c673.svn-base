//
//  CashInVC.m
//  WaiHui
//
//  Created by liuxiang on 2018/12/14.
//  Copyright © 2018年 faxian. All rights reserved.
//

#import "CashInVC.h"

@interface CashInVC ()
@property (strong, nonatomic) IBOutlet UIView *footerView;
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (nonatomic,strong) NSArray *dataList;
@property (nonatomic,copy) NSString *outStr;
@property (nonatomic,strong) CashInModel *model;
@property (nonatomic,strong) NSArray *tds;
@property (nonatomic,strong) TdModel *tdModel;
@property (nonatomic,strong) TXLimitedTextField *textField;
@property (nonatomic,copy) NSString *rnbStr;
@property (nonatomic,assign) BOOL IsFirst;

@property (weak, nonatomic) IBOutlet UIButton *doneBtn;



@end

@implementation CashInVC


- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    
}

- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
    
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.footerView.height = 180;
    [self.doneBtn hyb_addCornerRadius:5 size:CGSizeMake(kScreenWidth - 30, 44)];
    [self loadData];
}

- (void)loadData
{
   

    BADataEntity *entity = [BADataEntity new];
    entity.urlString = [NSString stringWithFormat:@"%@%@",MainUrl,Url_MyCenter];
    entity.needCache = NO;
    entity.parameters = @{@"types":@"4",@"Access_Token":[LxUserDefaults objectForKey:Token]};
    [SVProgressHUD show];
    [SVProgressHUD setDefaultMaskType:SVProgressHUDMaskTypeBlack];
    [BANetManager ba_request_POSTWithEntity:entity successBlock:^(id response) {
        NSDictionary *result = response;
        if ([result[@"code"] intValue] == 1) {
            //成功
//            [SVProgressHUD dismiss];
            self.model = [CashInModel mj_objectWithKeyValues:result[@"data"]];
            //获取通道
            if(self.mt4Str.length == 0){
             
                [self loadpassageway:self.model.mt4_id.firstObject];
            }else{
                [self loadpassageway:self.mt4Str];

            }
            
        }else{
            
            [SVProgressHUD showErrorWithStatus:result[@"message"]];
            
        }
        
        
    } failureBlock:^(NSError *error) {
        [SVProgressHUD showErrorWithStatus:error.userInfo[@"NSDebugDescription"]];
        
        
    } progressBlock:^(int64_t bytesProgress, int64_t totalBytesProgress) {
        
    }];
    
    
}

- (void)loadpassageway:(NSString *)mt4Str
{
    BADataEntity *entity = [BADataEntity new];
    entity.urlString = [NSString stringWithFormat:@"%@%@",MainUrl,Url_MyCenter];
    entity.needCache = NO;
    entity.parameters = @{@"types":@"7",@"Access_Token":[LxUserDefaults objectForKey:Token],@"amount":mt4Str};
    [SVProgressHUD show];
    [SVProgressHUD setDefaultMaskType:SVProgressHUDMaskTypeNone];
    
    [BANetManager ba_request_POSTWithEntity:entity successBlock:^(id response) {
        NSDictionary *result = response;
        if ([result[@"code"] intValue] == 1) {
            //成功
            [SVProgressHUD dismiss];
            self.tds = [TdModel mj_objectArrayWithKeyValuesArray:result[@"data"][@"payConfig"]];
            self.tableView.tableFooterView = self.footerView;
            self.dataList = @[@"MT4账户",@"入金金额",@"实时汇率 ",@"入金方式"];
            self.mt4Str = mt4Str;
            self.rnbStr = @"0";
            TdModel *model = self.tds.firstObject;
            self.tdModel = model;
            self.outStr = model.payChannelName;
            [self.tableView reloadData];
            
        }else{
            
            [SVProgressHUD showErrorWithStatus:result[@"message"]];
            
        }
        
    } failureBlock:^(NSError *error) {
        [SVProgressHUD showErrorWithStatus:error.userInfo[@"NSDebugDescription"]];
        
        
    } progressBlock:^(int64_t bytesProgress, int64_t totalBytesProgress) {
        
    }];
    
}

#pragma  mark --------UITableView Delegete----------
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataList.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0 || indexPath.row == 3) {
       
        static NSString *identifire = @"cellID";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifire];
        if (cell == nil) {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:identifire];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
            UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 47.5, kScreenWidth, .5)];
            view.backgroundColor = [MyColor colorWithHexString:@"#F1F1F8"];
            [cell.contentView addSubview:view];
        }
        
        cell.textLabel.text = self.dataList[indexPath.row];
        cell.textLabel.font = [UIFont systemFontOfSize:14];
        cell.textLabel.textColor = [MyColor colorWithHexString:@"#3D478B"];
        
        cell.detailTextLabel.textColor = [MyColor colorWithHexString:@"#2B2B76"];
        cell.detailTextLabel.font = [UIFont systemFontOfSize:14];
        if (indexPath.row == 0 ) {
            
            cell.detailTextLabel.text = self.mt4Str;
        }else{
            cell.detailTextLabel.text = self.outStr;
            
        }
        
        return cell;
    }else if (indexPath.row == 1){
        static NSString *identifire = @"cellID2";
        CashTextFieldCell *cell = [tableView dequeueReusableCellWithIdentifier:identifire];
        if (cell == nil) {
            cell = [[NSBundle mainBundle] loadNibNamed:@"CashTextFieldCell" owner:nil options:nil].lastObject;
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
           
        }
        cell.name1.text = self.dataList[indexPath.row];
        cell.nameLab2.text = @"美元";
        cell.textField.placeholder = @"输入金额";
        cell.textField.limitedPrefix = 100;
        cell.textField.limitedSuffix = 2;
        cell.textField.limitedType = TXLimitedTextFieldTypePrice;
        self.textField = cell.textField;
        [self.textField addTarget:self action:@selector(changText) forControlEvents:UIControlEventEditingChanged];

        return cell;
        
    }else{
        
        static NSString *identifire = @"cellID3";
        CashRateCell *cell = [tableView dequeueReusableCellWithIdentifier:identifire];
        if (cell == nil) {
            cell = [[NSBundle mainBundle] loadNibNamed:@"CashRateCell" owner:nil options:nil].lastObject;
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            
        }
        
        cell.lab1.text = @"实时汇率 ";
        cell.lab2.text = self.model.rate;
        cell.lab3.text = @"折算为";
        cell.lab4.text = self.rnbStr;
        cell.lab5.text = @"元人民币";
        
        return cell;
        
    }
    
}

- (void)changText
{
   
    
    self.rnbStr = [NSString stringWithFormat:@"%.2f",[self.textField.text floatValue] * [self.model.rate floatValue]];
    [self.tableView reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:2 inSection:0]] withRowAnimation:UITableViewRowAnimationNone];
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 48;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    
    return 0.1;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row == 0) {
        
        NSArray *dataList = self.model.mt4_id;
        TableViewAlert *alert = [[TableViewAlert alloc] initTableViewAlertWithTitle:@"选择账户" withDatasource:dataList];
        alert.clickBlock = ^(int index) {
            
            [self loadpassageway:dataList[index]];
            self.mt4Str = dataList[index];
        };
        [alert show];
    }
    
    if (indexPath.row == 3) {
        
        NSMutableArray *marray = [NSMutableArray array];
        for (TdModel *model in self.tds) {
            [marray addObject:model.payChannelName];
        }
        
        NSArray *dataList = marray;
        TableViewAlert *alert = [[TableViewAlert alloc] initTableViewAlertWithTitle:@"选择入金方式" withDatasource:dataList];
        alert.clickBlock = ^(int index) {
            
            self.outStr = dataList[index];
            self.tdModel = self.tds[index];
            [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];
            
        };
        [alert show];
    }
}


- (IBAction)doneAC:(id)sender {
    
    if (self.textField.text.length == 0) {
        [SVProgressHUD showErrorWithStatus:@"请输入入金金额"];
        return;
    }
    
    if ([self.textField.text floatValue] > self.tdModel.maxUsdAmount) {
        [SVProgressHUD showErrorWithStatus:[NSString stringWithFormat:@"金额超出范围，最大为%f",self.tdModel.maxUsdAmount]];
        return;
    }
    
    if ([self.textField.text floatValue] > self.tdModel.minUsdAmount) {
        [SVProgressHUD showErrorWithStatus:[NSString stringWithFormat:@"金额超出范围，最小为%f",self.tdModel.minUsdAmount]];
        return;
    }
    
    BADataEntity *entity = [BADataEntity new];
    entity.urlString = [NSString stringWithFormat:@"%@%@",MainUrl,Url_MyCenter];
    entity.needCache = NO;
    entity.parameters = @{@"types":@"8",@"Access_Token":[LxUserDefaults objectForKey:Token],@"amount":self.textField.text,@"mt4_id":self.mt4Str,@"cnyamount":self.rnbStr};
    [SVProgressHUD show];
    [SVProgressHUD setDefaultMaskType:SVProgressHUDMaskTypeBlack];
    
    [BANetManager ba_request_POSTWithEntity:entity successBlock:^(id response) {
        NSDictionary *result = response;
        if ([result[@"code"] intValue] == 1) {
            //成功
            [SVProgressHUD dismiss];
            
            [SVProgressHUD showSuccessWithStatus:@"成功"];

        }else{
            
            [SVProgressHUD showErrorWithStatus:result[@"message"]];
            
        }
        
        
    } failureBlock:^(NSError *error) {
        [SVProgressHUD showErrorWithStatus:error.userInfo[@"NSDebugDescription"]];
        
        
    } progressBlock:^(int64_t bytesProgress, int64_t totalBytesProgress) {
        
    }];
    
}

#pragma mark - JXCategoryListContentViewDelegate
- (UIView *)listView {
    return self.view;
}

- (void)listDidAppear {
    NSLog(@"%@", NSStringFromSelector(_cmd));
    
}

- (void)listDidDisappear {
    NSLog(@"%@", NSStringFromSelector(_cmd));
    
}


@end
