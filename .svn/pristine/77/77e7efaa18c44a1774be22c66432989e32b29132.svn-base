//
//  ListVC.m
//  WaiHui
//
//  Created by liuxiang on 2018/12/11.
//  Copyright © 2018年 faxian. All rights reserved.
//

#import "ListVC.h"

@interface ListVC ()<JXPagerViewListViewDelegate>
@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property(nonatomic,retain) NSArray *dataList;
@property (nonatomic, copy) void(^scrollCallback)(UIScrollView *scrollView);
@property (weak, nonatomic) IBOutlet UIActivityIndicatorView *activity;

@end

@implementation ListVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    self.activity.hidden = YES;

    self.dataList = [NSMutableArray array];
    [self loadsubData];

   
}

- (void)reloadSUB
{
    self.activity.hidden = YES;
    [self.activity startAnimating];
    
    self.tableView.ly_emptyView = self.noDataView;
    self.noDataView.titleStr = @"暂无挂单记录";
    
    BADataEntity *entity = [BADataEntity new];
    entity.urlString = [NSString stringWithFormat:@"%@%@",MainUrl,Url_transactionAction];
    entity.needCache = NO;
    entity.parameters = @{@"types":@"4",@"mt4_id":self.mt4Str};
    
    [BANetManager ba_request_POSTWithEntity:entity successBlock:^(id response) {
        NSDictionary *result = response;
        if ([result[@"code"] intValue] == 0) {
            //成功
            self.activity.hidden = YES;
            [self.activity stopAnimating];
            
            self.dataList = [HoldModel mj_objectArrayWithKeyValuesArray:result[@"data"]];
            [self.tableView reloadData];
            [self.tableView ly_endLoading];
            
        }else{
            
            self.activity.hidden = YES;
            [self.activity stopAnimating];
            [SVProgressHUD showErrorWithStatus:result[@"message"]];
            self.tableView.ly_emptyView = self.systemExceptionView;
            [self.tableView ly_endLoading];
            [self.tableView ly_endLoading];
            
        }
        
        
    } failureBlock:^(NSError *error) {
        self.activity.hidden = YES;
        [self.activity stopAnimating];
        
        self.tableView.ly_emptyView = self.systemExceptionView;
        [self.tableView ly_endLoading];
        
        
        
    } progressBlock:^(int64_t bytesProgress, int64_t totalBytesProgress) {
        
    }];
    
    
    
}

- (void)loadsubData
{
    self.activity.hidden = NO;
    [self.activity startAnimating];
    
    self.tableView.ly_emptyView = self.noDataView;
    self.noDataView.titleStr = @"暂无挂单记录";
    
    BADataEntity *entity = [BADataEntity new];
    entity.urlString = [NSString stringWithFormat:@"%@%@",MainUrl,Url_transactionAction];
    entity.needCache = NO;
    entity.parameters = @{@"types":@"4",@"mt4_id":self.mt4Str};
    
    [BANetManager ba_request_POSTWithEntity:entity successBlock:^(id response) {
        NSDictionary *result = response;
        if ([result[@"code"] intValue] == 0) {
            //成功
            self.activity.hidden = YES;
            [self.activity stopAnimating];
            
            self.dataList = [HoldModel mj_objectArrayWithKeyValuesArray:result[@"data"]];
            [self.tableView reloadData];
            
            [self.tableView ly_endLoading];
            
        }else{
            
            self.activity.hidden = YES;
            [self.activity stopAnimating];
            [SVProgressHUD showErrorWithStatus:result[@"message"]];
            self.tableView.ly_emptyView = self.systemExceptionView;
            [self.tableView ly_endLoading];
            [self.tableView ly_endLoading];
            
        }
        
        
    } failureBlock:^(NSError *error) {
        self.activity.hidden = YES;
        [self.activity stopAnimating];
        
        self.tableView.ly_emptyView = self.systemExceptionView;
        [self.tableView ly_endLoading];
        
        
        
    } progressBlock:^(int64_t bytesProgress, int64_t totalBytesProgress) {
        
    }];
    
    
}


#pragma  mark --------UITableView Delegete----------
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataList.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *identifire = @"cellID";
    ListCell *cell = [tableView dequeueReusableCellWithIdentifier:identifire];
    if (cell == nil) {
        cell = [[[NSBundle mainBundle] loadNibNamed:@"ListCell" owner:nil options:nil] lastObject];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    
    cell.model = self.dataList[indexPath.row];
    
    cell.reloadBlock = ^{
        [self reloadSUB];
    };
    cell.hqBlock = ^(ListModel * _Nonnull model) {
        //行情
        DetailQuotationVC *vc = [[DetailQuotationVC alloc] init];
        vc.sybol = model.symbol;
        [self.navigationController pushViewController:vc animated:YES];
    };
    cell.gdBlock = ^(ListModel * _Nonnull model) {
        //改单
        ChangeOrderVC *vc = [ChangeOrderVC new];
        vc.reloadBlock = ^{
            [self reloadSUB];

        };
        vc.model = model;
        [self.navigationController pushViewController:vc animated:YES];
    };
    __weak typeof(self) weakSelf = self;

    cell.csBlock = ^(ListModel * _Nonnull model) {
        //撤单
        
        CheDanAlert *alert = [[CheDanAlert alloc] initCheDanAlertWith:[NSString stringWithFormat:@"#%@撤单",model.order]];
        alert.doneClick = ^{
            [self chedanAC:model];
        };
        [alert show];
        
        
    };
    return cell;
    
}



- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    HoldModel *model = self.dataList[indexPath.row];
    return [self.tableView cellHeightForIndexPath:indexPath model:model keyPath:@"model" cellClass:[ListCell class] contentViewWidth:kScreenWidth];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    
    return 0.1;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    HoldModel *model = self.dataList[indexPath.row];
    model.isOpen = !model.isOpen;
    [self.tableView reloadRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationNone];
    
    
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    !self.scrollCallback ?: self.scrollCallback(scrollView);
}

#pragma mark - JXPagingViewListViewDelegate
- (UIView *)listView {
    return self.view;
}


- (UIScrollView *)listScrollView {
    return self.tableView;
}


- (void)listViewDidScrollCallback:(void (^)(UIScrollView *))callback {
    self.scrollCallback = callback;
}


- (void)chedanAC:(HoldModel *)model
{
    BADataEntity *entity = [BADataEntity new];
    entity.urlString = [NSString stringWithFormat:@"%@%@",MainUrl,Url_transactionAction];
    entity.needCache = NO;
    entity.parameters = @{@"types":@"1",@"Access_Token":[LxUserDefaults objectForKey:Token],@"mt4_id":[LxUserDefaults objectForKey:Mt4_id],@"symbol":model.symbol,@"type":@"OrderDelete",@"command":model.command,@"volume":@"",@"price":@"",@"order":model.order,@"operateForm":@"Ios",@"sl":@"",@"tp":@""};
    [SVProgressHUD show];
    [SVProgressHUD setDefaultMaskType:SVProgressHUDMaskTypeBlack];
    
    
    [BANetManager ba_request_POSTWithEntity:entity successBlock:^(id response) {
        NSDictionary *result = response;
        if ([result[@"code"] intValue] == 1) {
            //成功
            [SVProgressHUD dismiss];
            [self loadsubData];
            
        }else{
            
            if([result[@"code"] intValue] == -1){
                //登录
                Mt4LoginAlert *alert = [[Mt4LoginAlert alloc] initTableViewAlertWithTitle:[NSString stringWithFormat:@"模拟账户：%@",[LxUserDefaults objectForKey:Mt4_id]]];
                alert.loginBlcok = ^(int type) {
                    if (type == 1) {
                        ResetPWStartVC *vc = [[ResetPWStartVC alloc] init];
                        vc.mt4Str = [LxUserDefaults objectForKey:Mt4_id];
                        [self.navigationController pushViewController:vc animated:YES];
                    }else{
                        [SVProgressHUD showSuccessWithStatus:@"登录成功请继续交易"];
                    }
                };
                [alert show];
            }
            [SVProgressHUD showErrorWithStatus:result[@"message"]];
            
        }
        
        
    } failureBlock:^(NSError *error) {
        [SVProgressHUD showErrorWithStatus:error.userInfo[@"NSDebugDescription"]];
        
        
    } progressBlock:^(int64_t bytesProgress, int64_t totalBytesProgress) {
        
    }];
    
}


@end
